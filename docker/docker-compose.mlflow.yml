# ==============================================================================
# MLflow 전용 Docker Compose - 6아키텍처
# 용도: MLflow 모델 레지스트리 개발 환경
# 실행: docker-compose -f docker/docker-compose.mlflow.yml up
# ==============================================================================

version: '3.8'

networks:
  mlflow-network:
    driver: bridge

volumes:
  postgres_data:
  mlflow_artifacts:

services:
  # =============================================================================
  # 인프라: PostgreSQL
  # =============================================================================
  postgres:
    image: ${POSTGRES_IMAGE:-postgres:15-alpine}
    container_name: mlflow-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/configs/init-mlflow-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - mlflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =============================================================================
  # MLflow 서버
  # =============================================================================
  mlflow:
    build:
      context: ${HOST_PROJECT_PATH:-.}
      dockerfile: docker/dockerfiles/Dockerfile.mlflow
    container_name: mlflow-server
    environment:
      - MLFLOW_BACKEND_STORE_URI=postgresql://mlflow:mlflow@postgres:5432/mlflow
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=file:///app/mlartifacts
      - PYTHONPATH=/app:/app/src
    volumes:
      - ${HOST_PROJECT_PATH:-.}:/app
      - mlflow_artifacts:/app/mlartifacts
    ports:
      - "${MLFLOW_PORT:-5000}:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mlflow-network
    command: >
      bash -c "
        sleep 10 &&
        mlflow db upgrade postgresql://mlflow:mlflow@postgres:5432/mlflow &&
        mlflow server --backend-store-uri postgresql://mlflow:mlflow@postgres:5432/mlflow --default-artifact-root file:///app/mlartifacts --host 0.0.0.0 --port 5000
      "
