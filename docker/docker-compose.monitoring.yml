# version: '3.8' # the attribute `version` is obsolet

# Extended Docker Compose with Monitoring Stack
# Includes: Prometheus, Grafana, AlertManager

services:
  # Existing services (API + MLflow)
  mlflow:
    image: python:3.11-slim
    container_name: mlops-mlflow
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
      - ./mlartifacts:/mlartifacts
    command: >
      bash -c 
      "apt-get update && apt-get install -y curl netcat-traditional &&
               pip install mlflow==2.8.1 &&
               mkdir -p /mlruns /mlartifacts &&
               mlflow server --host 0.0.0.0 --port 5000 
               mlflow server --host 0.0.0.0 --port 5000 
               --backend-store-uri sqlite:///mlruns/mlflow.db
               --default-artifact-root /mlartifacts"
    environment:
      - MLFLOW_BACKEND_STORE_URI=sqlite:///mlruns/mlflow.db
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/mlartifacts
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - mlops-network

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    container_name: mlops-api
    ports:
      - "8000:8000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MODEL_PATH=/app/models
      - LOG_LEVEL=INFO
      - PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus_multiproc
    depends_on:
      mlflow:
        condition: service_healthy
    volumes:
      - ../models:/app/models:ro
      - ../logs:/app/logs
      - ../data:/app/data:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    restart: unless-stopped
    networks:
      - mlops-network

  # üîç Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: mlops-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/rules:/etc/prometheus/rules:ro
      - prometheus-storage:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    restart: unless-stopped
    networks:
      - mlops-network

  # üìä Grafana - Visualization
  grafana:
    image: grafana/grafana:10.0.0
    container_name: mlops-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=mlops123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/mlops-overview.json
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - mlops-network

  # üö® AlertManager - Alert Routing
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: mlops-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      # - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-storage:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--log.level=debug'  # Add this for debugging
    restart: unless-stopped
    networks:
      - mlops-network
    healthcheck:  
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s    

  # üìà Node Exporter - System Metrics
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: mlops-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - mlops-network

  # üê≥ cAdvisor - Container Metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: mlops-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    restart: unless-stopped
    privileged: true
    networks:
      - mlops-network

volumes:
  prometheus-storage:
  grafana-storage:
  alertmanager-storage:

networks:
  mlops-network:
    driver: bridge