# ==============================================================================
# MLOps 9아키텍처 Docker 환경 변수
# 이 파일을 .env로 복사하고 실제 값들을 설정하세요
# Docker Compose에서 자동으로 로드됩니다
# ==============================================================================

# ==============================================================================
# 공통 환경 설정
# ==============================================================================
COMPOSE_PROJECT_NAME=movie-mlops
ENVIRONMENT=development
DEBUG=true
TZ=Asia/Seoul

# ==============================================================================
# 네트워크 설정
# ==============================================================================
NETWORK_NAME=movie-mlops-network

# ==============================================================================
# 볼륨 및 경로 설정
# ==============================================================================
# WSL 경로 매핑 (Windows에서 WSL Docker 사용 시)
HOST_PROJECT_PATH=.
CONTAINER_PROJECT_PATH=/app

# 데이터 볼륨
DATA_VOLUME_PATH=./data
LOGS_VOLUME_PATH=./logs
MODELS_VOLUME_PATH=./models

# ==============================================================================
# 1아키텍처 + 5아키텍처: Apache Airflow
# ==============================================================================
AIRFLOW_IMAGE_NAME=movie-mlops/airflow
AIRFLOW_VERSION=2.9.3
AIRFLOW_UID=50000
AIRFLOW_GID=0

# Airflow 설정
AIRFLOW__CORE__EXECUTOR=LocalExecutor
AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
AIRFLOW__CORE__LOAD_EXAMPLES=False
AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
AIRFLOW__WEBSERVER__SECRET_KEY=your-airflow-secret-key-change-in-production

# Airflow 포트
AIRFLOW_WEBSERVER_PORT=8080
AIRFLOW_FLOWER_PORT=5555

# ==============================================================================
# 2아키텍처: Feast 피처 스토어
# ==============================================================================
FEAST_IMAGE_NAME=movie-mlops/feast
FEAST_VERSION=0.40.1-python3.11
FEAST_PORT=6566

# Feast 설정
FEAST_REPO_PATH=/app/feast_repo
FEAST_REGISTRY_PATH=/app/feast_repo/data/registry.db

# ==============================================================================
# 6아키텍처: MLflow
# ==============================================================================
MLFLOW_IMAGE_NAME=movie-mlops/mlflow
MLFLOW_VERSION=2.17.2-python3.11
MLFLOW_PORT=5000

# MLflow 설정
MLFLOW_BACKEND_STORE_URI=postgresql://mlflow:mlflow@postgres:5432/mlflow
MLFLOW_DEFAULT_ARTIFACT_ROOT=file:///app/mlartifacts
MLFLOW_SERVE_ARTIFACTS=true

# ==============================================================================
# 7아키텍처: PyTorch
# ==============================================================================
PYTORCH_IMAGE_NAME=movie-mlops/pytorch
PYTORCH_VERSION=2.5.1-python3.11
PYTORCH_API_PORT=8001

# PyTorch 설정
PYTORCH_DEVICE=cpu
TORCH_HOME=/app/.torch

# ==============================================================================
# 8아키텍처: Prometheus + Grafana
# ==============================================================================
PROMETHEUS_IMAGE=prom/prometheus:v2.48.0
PROMETHEUS_PORT=9090
PROMETHEUS_CONFIG_PATH=./docker/configs/prometheus.yml

GRAFANA_IMAGE=grafana/grafana:10.2.0
GRAFANA_PORT=3000
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=admin123

# ==============================================================================
# 9아키텍처: Apache Kafka
# ==============================================================================
KAFKA_IMAGE=confluentinc/cp-kafka:7.5.0
KAFKA_PORT=9092
KAFKA_INTERNAL_PORT=29092

ZOOKEEPER_IMAGE=confluentinc/cp-zookeeper:7.5.0
ZOOKEEPER_PORT=2181

# Kafka 설정
KAFKA_BROKER_ID=1
KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
KAFKA_GROUP_ID=movie-mlops-group

# ==============================================================================
# 데이터베이스: PostgreSQL (공용)
# ==============================================================================
POSTGRES_IMAGE=postgres:15-alpine
POSTGRES_PORT=5432
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres123
POSTGRES_DB=postgres

# 서비스별 데이터베이스
POSTGRES_AIRFLOW_DB=airflow
POSTGRES_AIRFLOW_USER=airflow
POSTGRES_AIRFLOW_PASSWORD=airflow

POSTGRES_MLFLOW_DB=mlflow
POSTGRES_MLFLOW_USER=mlflow
POSTGRES_MLFLOW_PASSWORD=mlflow

# ==============================================================================
# 캐시: Redis (공용)
# ==============================================================================
REDIS_IMAGE=redis:7-alpine
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# ==============================================================================
# FastAPI 웹 서비스
# ==============================================================================
API_IMAGE_NAME=movie-mlops/api
API_VERSION=latest
API_PORT=8000

# FastAPI 설정
API_HOST=0.0.0.0
API_WORKERS=4
API_RELOAD=true
API_LOG_LEVEL=info

# ==============================================================================
# 보안 설정
# ==============================================================================
SECRET_KEY=your-super-secret-key-change-this-in-production-please
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# ==============================================================================
# 외부 API 설정
# ==============================================================================
# TMDB API (영화 데이터)
# TMDB_API_KEY는 https://www.themoviedb.org/settings/api 에서 발급받으세요
TMDB_API_KEY=your-tmdb-api-key-here
TMDB_BASE_URL=https://api.themoviedb.org/3/movie

# React 앱 설정 (기존 + 새로운 API)
REACT_APP_API_ENDPOINT=http://localhost:8000
REACT_APP_API_ENDPOINT_LEGACY=http://your-ec2-endpoint-here:8000/batch-predict

# ==============================================================================
# 개발 도구 설정
# ==============================================================================
JUPYTER_IMAGE_NAME=movie-mlops/jupyter
JUPYTER_PORT=8888
JUPYTER_TOKEN=movie-mlops-jupyter

# ==============================================================================
# 로깅 설정
# ==============================================================================
LOG_LEVEL=INFO
LOG_FORMAT=json

# ==============================================================================
# 리소스 제한 (Docker)
# ==============================================================================
# CPU 및 메모리 제한
AIRFLOW_MEMORY_LIMIT=2g
MLFLOW_MEMORY_LIMIT=1g
PYTORCH_MEMORY_LIMIT=4g
API_MEMORY_LIMIT=1g

POSTGRES_MEMORY_LIMIT=1g
REDIS_MEMORY_LIMIT=512m

# ==============================================================================
# 개발 전용 설정
# ==============================================================================
# 개발 시에만 사용
ENABLE_DEBUG_MODE=true
ENABLE_HOT_RELOAD=true
ENABLE_JUPYTER=true

# ==============================================================================
# 프로덕션 설정 (개발 시에는 주석 처리)
# ==============================================================================
# SSL_ENABLED=false
# ENABLE_HTTPS=false
# DOMAIN_NAME=movie-mlops.local

# ==============================================================================
# 볼륨 마운트 설정
# ==============================================================================
# 호스트 파일 시스템 경로 (WSL 기준)
AIRFLOW_DAGS_PATH=./airflow/dags
AIRFLOW_LOGS_PATH=./logs/airflow
AIRFLOW_PLUGINS_PATH=./airflow/plugins

MLFLOW_ARTIFACTS_PATH=./data/mlflow/artifacts
FEAST_DATA_PATH=./data/feast

JUPYTER_NOTEBOOKS_PATH=./notebooks
MODELS_PATH=./models

# ==============================================================================
# WSL Docker 특화 설정
# ==============================================================================
# WSL2에서 Docker 사용 시 파일 권한 설정
DOCKER_BUILDKIT=1
COMPOSE_DOCKER_CLI_BUILD=1

# 파일 시스템 성능 최적화
COMPOSE_PARALLEL_LIMIT=8

# ==============================================================================
# Airflow 단독 설정 (기존 인프라 재사용)
# ==============================================================================
AIRFLOW__WEBSERVER__SECRET_KEY=your-airflow-secret-key-2024-change-this
AIRFLOW__CORE__FERNET_KEY=your-fernet-key-32-characters-long-change-this

# ==============================================================================
# 주의사항 및 설정 가이드
# ==============================================================================
# 1. 이 파일을 .env로 복사하여 사용하세요: cp .env.template .env
# 2. TMDB_API_KEY를 https://www.themoviedb.org/settings/api 에서 발급받아 설정하세요
# 3. 프로덕션에서는 모든 패스워드와 시크릿 키를 변경하세요
# 4. WSL 환경에서는 HOST_PROJECT_PATH를 적절히 수정하세요
# 5. GPU 사용 시 PYTORCH_DEVICE를 cuda로 변경하세요
# 6. EC2 엔드포인트가 있다면 REACT_APP_API_ENDPOINT_LEGACY를 수정하세요
# 7. .env 파일은 Git에 커밋하지 마세요 (개인 API 키 포함)